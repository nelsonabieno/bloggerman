# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.3.7-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "%"
          MYSQL_DATABASE: bloggerman_test
          MYSQL_USER: root

    working_directory: ~/nelsonabieno/bloggerman

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

#      - run:
#          name: install dependencies
#          command: |
#            gem install bundler -v 2.0.2 && bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: Configure Bundler
          command: |
            echo 'export  BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: |-
          mkdir -p config && echo 'test:
            adapter: mysql2
            database:  bloggerman_test
            username: root
            host: 127.0.0.1
          ' > config/database.yml
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace


      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
